vars:
  quay_registry: quay.io/mongodb/mongodb-kubernetes-init-appdb
  s3_bucket: s3://enterprise-operator-dockerfiles/dockerfiles/mongodb-kubernetes-init-appdb

images:
- name: init-appdb
  vars:
    context: .
    template_context: docker/mongodb-kubernetes-init-appdb
  platform: linux/amd64

  stages:
  - name: init-appdb-build-context
    task_type: docker_build
    dockerfile: docker/mongodb-kubernetes-init-appdb/Dockerfile.builder
    buildargs:
      mongodb_tools_url_ubi: $(inputs.params.mongodb_tools_url_ubi)
    output:
    - registry: $(inputs.params.registry)/mongodb-kubernetes-init-appdb-context
      tag: $(inputs.params.version_id)

  - name: init-appdb-template-ubi
    task_type: dockerfile_template
    template_file_extension: ubi_minimal
    inputs:
    - is_appdb
    output:
    - dockerfile: $(functions.tempfile)

  - name: init-appdb-build-ubi
    task_type: docker_build
    tags: ["ubi"]
    buildargs:
      version: $(inputs.params.version)
      imagebase: $(inputs.params.registry)/mongodb-kubernetes-init-appdb-context:$(inputs.params.version_id)
    dockerfile: $(stages['init-appdb-template-ubi'].outputs[0].dockerfile)
    output:
    - registry: $(inputs.params.registry)/mongodb-kubernetes-init-appdb
      tag: $(inputs.params.version_id)

  - name: master-latest
    task_type: tag_image
    tags: [ "master" ]
    source:
      registry: $(inputs.params.registry)/mongodb-kubernetes-init-appdb
      tag: $(inputs.params.version_id)
    destination:
      - registry: $(inputs.params.registry)/mongodb-kubernetes-init-appdb
        tag: latest

  - name: init-appdb-release-context
    task_type: tag_image
    tags: ["release"]
    source:
      registry: $(inputs.params.registry)/mongodb-kubernetes-init-appdb-context
      tag: $(inputs.params.version_id)
    destination:
    - registry: $(inputs.params.quay_registry)
      tag: $(inputs.params.version)-context

  - name: init-appdb-template-ubi
    task_type: dockerfile_template
    template_file_extension: ubi_minimal
    tags: ["release"]
    inputs:
    - is_appdb
    output:
    - dockerfile: $(inputs.params.s3_bucket)/$(inputs.params.version)/ubi/Dockerfile
