vars:
  registry: <container-registry>
  quay_registry: quay.io/mongodb/mongodb-kubernetes
  s3_bucket: s3://enterprise-operator-dockerfiles/dockerfiles/mongodb-kubernetes

images:
- name: mongodb-kubernetes
  vars:
    context: .
    template_context: docker/mongodb-kubernetes-operator
  platform: linux/$(inputs.params.architecture)
  inputs:
  - version
  - log_automation_config_diff
  - architecture

  stages:

  - name: operator-context-dockerfile
    task_type: docker_build
    dockerfile: docker/mongodb-kubernetes-operator/Dockerfile.builder
    buildargs:
      release_version: $(inputs.params.version)
      log_automation_config_diff: $(inputs.params.log_automation_config_diff)
      use_race: "false"
      TARGETARCH: $(inputs.params.architecture)
    output:
    - registry: $(inputs.params.registry)/operator-context
      tag: $(inputs.params.version_id)-$(inputs.params.architecture)

  - name: operator-race-context-dockerfile
    task_type: docker_build
    dockerfile: docker/mongodb-kubernetes-operator/Dockerfile.builder
    buildargs:
      release_version: $(inputs.params.version)
      log_automation_config_diff: $(inputs.params.log_automation_config_diff)
      use_race: "true"
      TARGETARCH: $(inputs.params.architecture)
    output:
    - registry: $(inputs.params.registry)/operator-context
      tag: $(inputs.params.version_id)-race-$(inputs.params.architecture)

  - name: operator-template-ubi
    task_type: dockerfile_template
    distro: ubi
    inputs:
    - version
    - debug
    output:
    - dockerfile: $(functions.tempfile)

  - name: operator-ubi-build
    task_type: docker_build
    dockerfile: $(stages['operator-template-ubi'].outputs[0].dockerfile)
    buildargs:
      imagebase: $(inputs.params.registry)/operator-context:$(inputs.params.version_id)-$(inputs.params.architecture)
    output:
    - registry: $(inputs.params.registry)/mongodb-kubernetes
      tag: $(inputs.params.version_id)-$(inputs.params.architecture)

  - name: operator-ubi-race-build
    task_type: docker_build
    dockerfile: $(stages['operator-template-ubi'].outputs[0].dockerfile)
    buildargs:
      imagebase: $(inputs.params.registry)/operator-context:$(inputs.params.version_id)-race-$(inputs.params.architecture)
    output:
    - registry: $(inputs.params.registry)/mongodb-kubernetes
      tag: $(inputs.params.version_id)-race-$(inputs.params.architecture)

  - name: master-latest
    task_type: tag_image
    tags: [ "master" ]
    source:
      registry: $(inputs.params.registry)/mongodb-kubernetes
      tag: $(inputs.params.version_id)-$(inputs.params.architecture)
    destination:
      - registry: $(inputs.params.registry)/mongodb-kubernetes
        tag: latest-$(inputs.params.architecture)

  - name: operator-context-release
    task_type: tag_image
    tags: ["release"]
    source:
      registry: $(inputs.params.registry)/operator-context
      tag: $(inputs.params.version_id)-$(inputs.params.architecture)
    destination:
    - registry: $(inputs.params.quay_registry)
      tag: $(inputs.params.version)-context-$(inputs.params.architecture)

  - name: operator-template-ubi
    task_type: dockerfile_template
    tags: ["release"]
    distro: ubi
    inputs:
    - version
    output:
    - dockerfile: $(inputs.params.s3_bucket)/$(inputs.params.version)/ubi/Dockerfile
