import build_kubectl_plugin
import utils

from scripts.release.build.build_info import (
    load_build_info,
)
from scripts.release.build.build_scenario import (
    BuildScenario,
)


def run_goreleaser_release():

    command = ["./goreleaser", "release", "--clean"]
    utils.run_goreleaser_command(command)


# upload_artifacts uploads the artifacts that are generated by the `goreleaser release`
# command to the release S3 bucket.
def upload_artifacts(s3_bucket: str, version: str):
    build_kubectl_plugin.upload_artifacts_to_s3(s3_bucket, version)


def main():
    run_goreleaser_release()

    build_scenario = BuildScenario.infer_scenario_from_environment()
    kubectl_plugin_build_info = load_build_info(build_scenario).binaries[utils.KUBECTL_PLUGIN_BINARY_NAME]

    upload_artifacts(kubectl_plugin_build_info.s3_store, kubectl_plugin_build_info.version)


if __name__ == "__main__":
    main()
