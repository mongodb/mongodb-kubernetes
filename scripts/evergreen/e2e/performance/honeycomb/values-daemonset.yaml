mode: daemonset

image:
  repository: otel/opentelemetry-collector-k8s

# Required to use the kubeletstats cpu/memory utilization metrics
clusterRole:
  create: true
  rules:
    - apiGroups:
        - ""
      resources:
        - nodes/proxy
      verbs:
        - get

resources:
  requests:
    cpu: 50m
    memory: 64Mi
  limits:
    cpu: 100m
    memory: 128Mi

extraEnvs:
  - name: ENDPOINT
    valueFrom:
      secretKeyRef:
        name: honeycomb
        key: endpoint
  - name: BUILD_VARIANT
    valueFrom:
      secretKeyRef:
        name: build-variant
        key: build-variant
  - name: NAMESPACE
    valueFrom:
      secretKeyRef:
        name: namespace
        key: namespace
  - name: task_id
    valueFrom:
      secretKeyRef:
        name: task-id
        key: task-id
  - name: task_name
    valueFrom:
      secretKeyRef:
        name: task-name
        key: task-name
  - name: version_id
    valueFrom:
      secretKeyRef:
        name: version-id
        key: version-id

presets:
  # enables the k8sattributesprocessor and adds it to the traces, metrics, and logs pipelines
  kubernetesAttributes:
    enabled: true
    extractAllPodLabels: true
    extractAllPodAnnotations: true
  # enables the kubeletstatsreceiver and adds it to the metrics pipelines
  kubeletMetrics:
    enabled: true

config:
  receivers:
    jaeger: null
    zipkin: null
    kubeletstats:
      collection_interval: 300s
      auth_type: "serviceAccount"
      endpoint: "https://${env:K8S_NODE_NAME}:10250"
      insecure_skip_verify: true
      metric_groups:
        - node
        - pod
      metrics:
        k8s.node.uptime:
          enabled: false
        k8s.pod.uptime:
          enabled: false
        k8s.pod.cpu_limit_utilization:
          enabled: false
        k8s.pod.cpu_request_utilization:
          enabled: false
        k8s.pod.memory_limit_utilization:
          enabled: true
        k8s.pod.memory_request_utilization:
          enabled: true
        k8s.pod.cpu.usage:
          enabled: false
        k8s.container.cpu_limit_utilization:
          enabled: false
        container.cpu.usage:
          enabled: false
  processors:
    resource/k8s:
      attributes:
        - key: k8s.cluster.name
          from_attribute: k8s-cluster
          action: insert
        - key: evergreen.build.name
          value: ${env:BUILD_VARIANT}
          action: insert
        - key: evergreen.task.id
          value: ${env:task_id}
          action: insert
        - key: evergreen.task.name
          value: ${env:task_name}
          action: insert
        - key: evergreen.version.id
          value: ${env:version_id}
          action: insert
        - key: team
          value: meko
          action: insert
  exporters:
    otlp:
      endpoint: ${env:ENDPOINT}
  service:
    pipelines:
      traces:
        receivers: [otlp]
        exporters: [otlp]
      metrics:
        processors: [ resource/k8s ]
        exporters: [otlp]
      logs:
        exporters: [otlp]

ports:
  jaeger-compact:
    enabled: false
  jaeger-thrift:
    enabled: false
  jaeger-grpc:
    enabled: false
  zipkin:
    enabled: false
